<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- Controller 쪽에도 지정을 해야 할 상황이 생길 수 있어서, 미리 설정함  -->
	<!-- Auto Proxy -->
	<aop:aspectj-autoproxy/>

	

	<!-- Interceptors  -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/auth"/>
			<bean class="com.douzone.mysite.security.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/logout"/>
			<bean class="com.douzone.mysite.security.LogoutInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<!-- 위에 둘 제외 + assets 애들 하고 나머지 다~ 검사   -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/user/auth"/>
			<mvc:exclude-mapping path="/user/logout"/>
			<mvc:exclude-mapping path="/assets/**"/>
			<bean class="com.douzone.mysite.security.AuthInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
		 
	<!--ViewResolver 설정 --> 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- Validator, conversionService, messageConverter를 자동으로 등록 -->
	<mvc:annotation-driven>
		<!-- Message Converter -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
			    <property name="supportedMediaTypes">
			        <list>
			             <value>text/html; charset=UTF-8</value>
			        </list>
			    </property>
			</bean>
			
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			   <property name="supportedMediaTypes">
			       <list>
			            <value>application/json; charset=UTF-8</value>
			        </list>
			   </property>
			</bean>
		</mvc:message-converters>
	
		<mvc:argument-resolvers>
			<bean class="com.douzone.mysite.security.AuthUserHandlerMethodArgumentResolver"/>
		</mvc:argument-resolvers>	
		
		
	</mvc:annotation-driven>

	<!-- 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler/>
	
	<!-- Multipart Resolver  -->
	<!-- 멀티파트 리졸버 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" />
		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<!-- property name="maxInMemorySize" value="52428800" /-->
		<!-- defaultEncoding -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>	
	
	<!--mvc resources mapping  -->
	<!-- mapping 시에 img들의 위치는 location과 mapping이 각각 지정하는곳에 있어야한다.   -->
	<mvc:resources location="file:/Users/yeominji/uploads-mysite/" mapping="/images/**"/>
	
	<context:annotation-config />
	<context:component-scan base-package="com.douzone.mysite.controller, com.douzone.mysite.exception" />


	 <!-- 6. MessageSource -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	   <property name="basenames">
	      <list>
			<value>messages/messages_ko</value>
			<!-- <value>messages/messages_jp</value>
			<value>messages/messages_cn</value> -->
	      </list>
	   </property>
	</bean>

</beans>